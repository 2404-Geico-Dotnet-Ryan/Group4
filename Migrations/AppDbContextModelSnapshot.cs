// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project2.Data;

#nullable disable

namespace Group4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project2.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Project2.Models.Climate", b =>
                {
                    b.Property<int>("ClimateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClimateId"));

                    b.Property<string>("ClimateType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClimateId");

                    b.ToTable("Climates");
                });

            modelBuilder.Entity("Project2.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Project2.Models.SavedTrip", b =>
                {
                    b.Property<int>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UId"));

                    b.Property<string>("ClimatePref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxBudget")
                        .HasColumnType("int");

                    b.Property<int>("NumOfTravelers")
                        .HasColumnType("int");

                    b.Property<bool>("PassportStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UId");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedTrips");
                });

            modelBuilder.Entity("Project2.Models.TravelType", b =>
                {
                    b.Property<int>("TravelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelTypeId"));

                    b.Property<string>("TravelTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TravelTypeId");

                    b.ToTable("TravelTypes");
                });

            modelBuilder.Entity("Project2.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ClimateId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MaxBudget")
                        .HasColumnType("int");

                    b.Property<bool>("NeedsPassport")
                        .HasColumnType("bit");

                    b.Property<int>("TravelTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TripName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ClimateId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TravelTypeId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Project2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxBudget")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project2.Models.SavedTrip", b =>
                {
                    b.HasOne("Project2.Models.Trip", "Trip")
                        .WithMany("SavedTrips")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project2.Models.User", "User")
                        .WithMany("SavedTrips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project2.Models.Trip", b =>
                {
                    b.HasOne("Project2.Models.Activity", "Activity")
                        .WithMany("Trips")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project2.Models.Climate", "Climate")
                        .WithMany("Trips")
                        .HasForeignKey("ClimateId");

                    b.HasOne("Project2.Models.Location", "Location")
                        .WithMany("Trips")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project2.Models.TravelType", "TravelType")
                        .WithMany("Trips")
                        .HasForeignKey("TravelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Climate");

                    b.Navigation("Location");

                    b.Navigation("TravelType");
                });

            modelBuilder.Entity("Project2.Models.Activity", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Project2.Models.Climate", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Project2.Models.Location", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Project2.Models.TravelType", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Project2.Models.Trip", b =>
                {
                    b.Navigation("SavedTrips");
                });

            modelBuilder.Entity("Project2.Models.User", b =>
                {
                    b.Navigation("SavedTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
